#워크플로의 이름 지정
name: CI/CD

#워크플로가 시작될 조건 지정(main 브랜치에 푸시할 때마다 워크플로 시작하도록 함)
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest #실행 환경 지정
    #실행 스텝 지정(그룹화, 각 항목은 별도의 작업 uses 또는 명령어 run로 이뤄짐)
    steps:
      #uses 키워드는 지정된 리포지토리를 확인하고 코드에 대한 작업 실행
      - uses: actions/checkout@v3 #checkout이라는 작업의 v3 버전 실행

      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Grant execute permission for gradlew #name : 스텝 이름 지정
        run: chmod +x gradlew #run : 실행할 명령어 입력

      - name: Build with Gradle
        run: ./gradlew clean build #gradle을 사용해 프로젝트를 빌드 이전 상대로 돌리고 다시 빌드하는 명령어

      #현재 시간 가져오기
      - name: Get current time
        uses: josStorer/get-current-time@v2.0.2 #플러그인 사용해 현재 시간 가져옴, 가져온 시간은 배포 버전 지정 시 사용됨
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      #배포용 패키지 경로 저장
      - name: Set artifact
        #빌드 이후 생성된 jar 파일을 찾아 "artifact"라는 환경 변수에 값 넣어줌
        run: echo "artifact=$(ls ./build/libs)" >> $GITHUB_ENV #GITHUB_ENV로 깃허브 워크플로 전체 사용 가능한 환경 변수 설정

      #빈스토크 배포
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20 #플러그인 사용해 빈스토크 배포 진행
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: springboot-developer
          environment_name: springboot-developer-env-1
          version_label: github-action-${{ steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: ./build/libs/${{env.artifact}}